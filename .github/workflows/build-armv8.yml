name: Cross-compile for Android armeabi-v7a

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  ubuntu-cmake-armv8:
    runs-on: ubuntu-24.04

    steps:
      - name: Clone repository
        id: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Cache Android NDK
        uses: actions/cache@v3
        with:
          path: /usr/local/lib/android/sdk/ndk
          key: ${{ runner.os }}-ndk-${{ hashFiles('**/build.gradle') }} # Adjust to use a relevant cache key based on project files
          restore-keys: |
            ${{ runner.os }}-ndk-

      - name: Install dependencies
        id: depends
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libcurl4-openssl-dev libpthread-stubs0-dev

      - name: Setup Android NDK
        uses: nttld/setup-ndk@v1.5.0
        with:
          ndk-version: "r25b"
          add-to-path: true
          link-to-sdk: false
          local-cache: false

      - name: Cache build directory
        uses: actions/cache@v3
        with:
          path: /home/runner/work/llama.cpp/llama.cpp/build
          key: ${{ runner.os }}-build-${{ hashFiles('CMakeLists.txt') }} # Cache based on project files like CMakeLists.txt
          restore-keys: |
            ${{ runner.os }}-build-

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          export CXXFLAGS="$CXXFLAGS -DNO_NEON -D__ARM_NEON=1" # Force ARM NEON to be set to 1 to avoid redefinition
          
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=armeabi-v7a \
            -DCMAKE_C_FLAGS="-march=armv8-a" \
            -DCMAKE_CXX_FLAGS="-march=armv8-a $CXXFLAGS" \
            -DLLAMA_FATAL_WARNINGS=ON \
            -DLLAMA_CURL=ON \
            -DANDROID_ARM_NEON=OFF \
            -DGGML_RPC=ON \
            -DBUILD_SHARED_LIBS=OFF \
            -DCURL_INCLUDE_DIR=/usr/include/curl \
            -DCURL_LIBRARY=/usr/lib/x86_64-linux-gnu/libcurl.so \
            -DTHREADS_PTHREAD_ARG=ON
          cmake --build . --config Release -j $(nproc)

      - name: Run tests
        id: cmake_test
        run: |
          cd build
          ctest -L 'main|curl' --verbose --timeout 900

      - name: Test llama2c conversion
        id: llama2c_test
        run: |
          cd build
          echo "Fetching tokenizer"
          wget https://huggingface.co/karpathy/tinyllamas/resolve/main/stories260K/tok512.bin
          echo "Fetching llama2c model"
          wget https://huggingface.co/karpathy/tinyllamas/resolve/main/stories260K/stories260K.bin
          ./bin/llama-convert-llama2c-to-ggml --copy-vocab-from-model ./tok512.bin --llama2c-model stories260K.bin --llama2c-output-model stories260K.gguf
          ./bin/llama-cli -m stories260K.gguf -p "One day, Lily met a Shoggoth" -n 500 -c 256

      - name: Determine tag name
        id: tag
        shell: bash
        run: |
          BUILD_NUMBER="$(git rev-list --count HEAD)"
          SHORT_HASH="$(git rev-parse --short=7 HEAD)"
          if [[ "${{ env.BRANCH_NAME }}" == "master" ]]; then
            echo "name=b${BUILD_NUMBER}" >> $GITHUB_OUTPUT
          else
            SAFE_NAME=$(echo "${{ env.BRANCH_NAME }}" | tr '/' '-')
            echo "name=${SAFE_NAME}-b${BUILD_NUMBER}-${SHORT_HASH}" >> $GITHUB_OUTPUT
          fi

      - name: Pack artifacts
        id: pack_artifacts
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}
        run: |
          cp LICENSE ./build/bin/
          zip -r llama-${{ steps.tag.outputs.name }}-bin-android-armv7a.zip ./build/bin/*

      - name: Upload artifacts
        if: ${{ ( github.event_name == 'push' && github.ref == 'refs/heads/master' ) || github.event.inputs.create_release == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          path: llama-cpp-${{ steps.tag.outputs.name }}-bin-android-armv7a.zip
          name: llama-cpp-android-armv7a.zip
